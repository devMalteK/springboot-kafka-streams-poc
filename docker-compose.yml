#docker-compose -f docker-compose.yml up --force-recreate --build --remove-orphans
version: "3.3"
volumes:
  sbkastp-kafka-data:
services:
  kafka:
    container_name: sbkstap-kafka
    image: docker.io/bitnami/kafka:3.2.3
    ports:
      - "9094:9094"
    #volumes:
    #  - sbkastp-kafka-data:/bitnami/kafka/data
    environment:
      #- BITNAMI_DEBUG=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://kafka:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#  sbkastp:
#    image: springboot-kafka-native-poc:0.0.2-SNAPSHOT
#    platform: linux/amd64
#    deploy:
#      mode: replicated
#      replicas: 1
#    depends_on:
#      - kafka
#    environment:
#      - sbkastp.kafka-bootstrap-server=http://kafka:9092